{"version":3,"sources":["webpack:///src/app/orders/order-detailed/order-detailed.component.ts","webpack:///src/app/orders/order-detailed/order-detailed.component.html","webpack:///src/app/orders/orders-routing.module.ts","webpack:///src/app/orders/orders.component.ts","webpack:///src/app/orders/orders.component.html","webpack:///src/app/orders/orders.module.ts","webpack:///src/app/orders/orders.service.ts"],"names":["OrderDetailedComponent","route","breadcrumbService","ordersService","set","getOrderDetails","snapshot","paramMap","get","subscribe","order","id","status","error","console","log","selector","templateUrl","styleUrls","routes","path","component","data","breadcrumb","alias","OrdersRoutingModule","forChild","declarations","imports","exports","OrdersComponent","toastr","getOrders","getOrdersForUser","orders","success","OrdersModule","OrdersService","http","baseUrl","apiUrl","providedIn"],"mappings":"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","file":"orders-orders-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { IOrder } from 'src/app/shared/models/order';\nimport { ActivatedRoute } from '@angular/router';\nimport { BreadcrumbService } from 'xng-breadcrumb';\nimport { OrdersService } from '../orders.service';\n\n@Component({\n  selector: 'app-order-detailed',\n  templateUrl: './order-detailed.component.html',\n  styleUrls: ['./order-detailed.component.scss']\n})\nexport class OrderDetailedComponent implements OnInit {\n  order: IOrder;\n\n  constructor(private route: ActivatedRoute, private breadcrumbService: BreadcrumbService, private ordersService: OrdersService) { \n    this.breadcrumbService.set('@OrderDetails', '');\n  }\n\n  ngOnInit() {\n    //this.getOrderDetails();\n    this.ordersService.getOrderDetails(+this.route.snapshot.paramMap.get('id'))\n    .subscribe((order: IOrder) => {\n      this.order = order;\n      this.breadcrumbService.set('@OrderDetails', `Order# ${order.id} - ${order.status}`);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getOrderDetails() {\n    // this.ordersService.getOrderDetails(+this.route.snapshot.paramMap.get('id'))\n    // .subscribe((order: IOrder) => {\n    //   this.order = order;\n    //   this.breadcrumbService.set('@OrderDetails', `Order# ${order.id} - ${order.status}`);\n    // }, error => {\n    //   console.log(error);\n    // });\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\" *ngIf=\"order\">\n      <div class=\"col-8\">\n       <app-basket-summary\n          [items]=\"order.orderItems\"\n          [isBasket]=\"false\"\n          [isOrder]=\"true\"\n       ></app-basket-summary>\n      </div>\n      <div class=\"col-4\">\n        <app-order-totals\n          [shippingPrice]=\"order.total - order.subtotal\"\n          [subtotal]=\"order.subtotal\"\n          [total]=\"order.total\"\n        >\n        </app-order-totals>\n      </div>\n    </div>\n  </div>\n  \n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrdersComponent } from './orders.component';\nimport { OrderDetailedComponent } from './order-detailed/order-detailed.component';\n\nconst routes: Routes = [\n  { path: '', component: OrdersComponent },\n  { path: ':id', component: OrderDetailedComponent, data: {breadcrumb: {alias: 'OrderDetails'}}}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class OrdersRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { IOrder } from '../shared/models/order';\nimport { OrdersService } from './orders.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n  orders: IOrder[];\n\n  constructor(private ordersService: OrdersService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n     this.getOrders();\n  }\n\n  getOrders() {\n    this.ordersService.getOrdersForUser().subscribe((orders: IOrder[]) => {\n      this.orders = orders;\n      this.toastr.success('Orders successfully retrieved');\n    }, (error) => {\n      this.toastr.error('Error occurred while retrieving orders');\n    });\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <table class=\"table table-hover\" style=\"cursor: pointer\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th>Order</th>\n                        <th>Date</th>\n                        <th>Total</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor=\"let order of orders\" routerLink=\"/orders/{{order.id}}\">\n                    <th># {{order.id}}</th>\n                    <td>{{order.orderDate | date: 'medium'}}</td>\n                    <td>{{order.total | currency: 'INR'}}</td>\n                    <td>{{order.status}}</td>\n                </tr>\n            </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrdersComponent } from './orders.component';\nimport { OrderDetailedComponent } from './order-detailed/order-detailed.component';\nimport { RouterModule } from '@angular/router';\nimport { OrdersRoutingModule } from './orders-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [OrdersComponent, OrderDetailedComponent],\n  imports: [\n    CommonModule,\n    OrdersRoutingModule,\n    SharedModule\n  ]\n})\nexport class OrdersModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getOrdersForUser() {\n    return this.http.get(this.baseUrl + 'orders');\n  }\n\n  getOrderDetails(id: number) {\n    return this.http.get(this.baseUrl + 'orders/' + id);\n  }\n}\n"]}