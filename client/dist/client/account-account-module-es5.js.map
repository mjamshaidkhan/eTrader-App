{"version":3,"sources":["webpack:///src/app/account/account-routing.module.ts","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/login/login.component.ts","webpack:///src/app/account/login/login.component.html","webpack:///src/app/account/register/register.component.ts","webpack:///src/app/account/register/register.component.html"],"names":["routes","path","component","AccountRoutingModule","forChild","declarations","imports","exports","AccountModule","LoginComponent","accountService","router","activatedRoute","returnUrl","snapshot","queryParams","createLoginForm","loginForm","email","required","pattern","password","login","value","subscribe","navigateByUrl","error","console","log","onSubmit","selector","templateUrl","styleUrls","RegisterComponent","formBuilder","createRegisterForm","registerForm","group","displayName","chackUniqueMail","register","err","errors","control","pipe","checkEmailExists","res","emailExists"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: string;\n\n  constructor(private accountService: AccountService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/shop';\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit() {\n    this.accountService.login(this.loginForm.value).subscribe(() => {\n      this.router.navigateByUrl(this.returnUrl);\n    }, error => console.log(error));\n  }\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n    <div class=\"col-3\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"text-center mb-4\">\n               <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n             </div>\n          \n             <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\n             <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n              \n            <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n       </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AsyncValidatorFn } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router } from '@angular/router';\nimport { timer, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  errors: string[];\n\n  constructor(private formBuilder: FormBuilder, private accountService: AccountService, private router: Router) { }\n\n  ngOnInit() {\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.formBuilder.group({\n      displayName: [null, [Validators.required]],\n      email: [null, [Validators.required,\n        Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')],\n        // async validators will be called once sync validators passed\n        [this.chackUniqueMail()]\n      ],\n      password: [null, [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.accountService.register(this.registerForm.value).subscribe(() => {\n      this.router.navigateByUrl('/shop');\n    }, (err) => {\n      console.log(err);\n      this.errors = err.errors;\n    });\n  }\n\n  chackUniqueMail(): AsyncValidatorFn {\n    // we are returning inner observable to outer Observable which is control via switch map\n    return control => {\n      return timer(500).pipe(\n        switchMap(() => {\n          if (!control.value) {\n            return of(null);\n          }\n          return this.accountService.checkEmailExists(control.value).pipe(\n          map(res => {\n            return res ? {emailExists : true } : null;\n          })\n        );\n    }));\n  };\n}\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n    <div class=\"col-3\">\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"text-center mb-4\">\n               <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n             </div>\n             <app-text-input formControlName=\"displayName\" [label]=\"'Display Name'\"></app-text-input>\n             <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\n             <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n              \n             <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n                 <li *ngFor=\"let err of errors\">\n                     {{err}}\n                 </li>\n             </ul>\n            <button [disabled]=\"registerForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n       </form>\n    </div>\n</div>\n"]}